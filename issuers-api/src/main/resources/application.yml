server:
  port: 9200
  servlet:
    context-path: /api
spring:
  application:
    name: issuers-api
  liquibase:
    default-schema: issuers_store
    enabled: true
  datasource:
    url: jdbc:postgresql://${POSTGRES_ADDRESS:localhost:5432}/issuers
    username: testuser
    password: postgres
  #    url: jdbc:h2:mem:testdb
  #    driver-class-name: org.h2.Driver
  #    username: sa
  #    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: false
    defer-datasource-initialization: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
      dialect: org.hibernate.dialect.PostgreSQL81Dialect
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
#  h2:
#    console:
#      enabled: true
logging:
  level:
    org:
      springframework: TRACE
    com:
      amazingbooks: TRACE
eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:9500}/eureka
security:
  oauth2:
    client:
      client-id: bookstore
      client-secret: bookstore
      access-token-uri: ${OAUTH_SERVER_ADDRESS:http://localhost:9010}/oauth/token
      grant-type: client_credentials
      scope: resource:read
      access-token-validity-seconds: 120
      refresh-token-validity-seconds: 120
    resource:
      token-info-uri: ${OAUTH_SERVER_ADDRESS:http://localhost:9010}/oauth/check_token
external-apps:
  books-api-base-url: ${BOOKS_API_ADDRESS:http://localhost:9100}/api